env:
  IMAGE_TAG: latest
name: Terraform Deploy
on:
  push:
    branches:
      - main
jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
      ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
      ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
      ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Unlock Terraform state (ignore errors if not locked)
        run: |
        terraform force-unlock d0fb2a45-9c5b-0311-634b-866ec79e1d25 || echo "State not locked or already unlocked."

      # - name: Log in to Azure CLI
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Log in to Azure Container Registry
      #   run: |
      #     az acr login --name mazenregistry

      # - name: Build Docker image
      #   run: |
      #     docker build -t mazenregistry.azurecr.io/example-app:${{ env.IMAGE_TAG }} .

      # - name: Push Docker image to ACR
      #   run: |
      #     docker push mazenregistry.azurecr.io/example-app:${{ env.IMAGE_TAG }}

      # Uncomment and update the following to deploy the image to your container app if needed
      # - name: Deploy Image to Azure Container App
      #   run: |
      #     az extension add --name containerapp --yes
      #     az account set --subscription f37ac0f7-354f-40be-8f3e-2e004312dceb
      #     az containerapp update --name example-app --resource-group github1 --image mazenregistry.azurecr.io/example-app:${{ env.IMAGE_TAG }}

      #Terraform Steps:

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      - name: Terraform Format
        run: terraform fmt -recursive
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false -var="container_image_tag=${{ env.IMAGE_TAG }}"
      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve tfplan
      - name: Terraform destroy
        run: terraform destroy --auto-approve
